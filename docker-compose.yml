version: '3.4'

services:
  db:
    container_name: db
    restart: unless-stopped
    image: postgres:10.15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: .env
  redis:
    container_name: redis
    restart: unless-stopped
    image: "redis:5"
  api:
    container_name: api
    image: mat-api:v1
    command: sh -c "./wait-for-it.sh db:5432 && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file: .env
    restart: unless-stopped
    depends_on:
      - db
      - redis
  celery_worker:
    container_name: celery_worker
    image: mat-api:v1
    command: bash -c "./wait-for-it.sh api:8000 redis:6379 && celery -A MAT.config.settings worker --loglevel=INFO"
    env_file: .env
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - api
  celery_beat:
    container_name: celery_beat
    image: mat-api:v1
    command: sh -c "./wait-for-it.sh api:8000 redis:6379 && celery -A MAT.config.settings beat --loglevel=INFO"
    env_file: .env
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - api
  webserver:
    image: nginx:1.19
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    depends_on:
      - api
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - static_volume:/app/static/
      - media_volume:/app/media

volumes:
  postgres_data:
  static_volume:
  media_volume:
